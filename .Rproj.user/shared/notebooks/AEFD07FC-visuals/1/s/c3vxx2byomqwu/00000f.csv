"0","max = as.numeric(counties@polygons[[length(counties@polygons)]]@ID)"
"0","spoly <- list()"
"0","ids <- list()"
"0","mapdata <- data.frame(matrix(1, ncol=ncol(counties@data), nrow=0))"
"0","colnames(mapdata) <- colnames(counties@data)"
"0",""
"0","vec <- c('Baby Boomer', 'Millenial', 'Gen X', 'Gen Z')"
"0","fips <- data.frame(id=as.integer(states@data$id), name=states@data$name)"
"0","statedata <- data %>%"
"0","    filter(GEN != ""Pre 1946"") %>%"
"0","    filter(RELATE == 0101 & COUNTY==0) %>%"
"0","    group_by(GEN, STATEFIP) %>%"
"0","    reframe(x1=1, x2=1, x3=1, x4=1, temp=1, x5=1, x6=1, x7=1, "
"0","            p = 100*round(weighted.mean(OWNERSHP==10, ASECWTH), digits=2)) %>%"
"0","    arrange(match(GEN, vec)) %>%"
"0","    pivot_wider(names_from = GEN, values_from = p) %>%"
"0","    right_join(fips, join_by(STATEFIP==id)) %>%"
"0","    mutate(temp = paste0(name, "" w/o Counties"")) %>%"
"0","    select(-name) %>%"
"0","    arrange(STATEFIP) %>%"
"0","    as.data.frame()"
"0",""
"0","for (i in 1:51) {"
"0","  "
"0","  if (i==2) next #skip alaska since it crashes r"
"0","  "
"0","  # state polygon setup"
"0","  x <- states@polygons[[i]]"
"0","  pid <- x@ID"
"0","  fip <- as.numeric(states@data[pid,""id""])"
"0","  name <- states@data[pid,""name""]"
"0","  x@ID <- as.character(as.numeric(x@ID)+max)"
"0","  pid <- x@ID"
"0","  x <- SpatialPolygons(list(x))"
"0","  "
"0","  # county polygon setup"
"0","  y <- counties"
"0","  "
"0","  idx <- intersect("
"0","    which(as.numeric(y$STATEFP)==fip),"
"0","    which(!(is.na(counties$boomer) | is.na(counties$genx) | is.na(counties$millenial) | is.na(counties$genz)))"
"0","  )"
"0","  "
"0","  idx <- intersect("
"0","    which(as.numeric(y$STATEFP)==fip),"
"0","    which(str_remove(codes, ""^0+"") %in% include_county$COUNTY)"
"0","  )"
"0",""
"0","  y <- SpatialPolygons(y@polygons[idx])"
"0","  "
"0","  #"
"0","  if (length(idx)==0) z <- x else  z <- x - y"
"0","  "
"0","  UNNESTED <- list()"
"0","  unnest_polygons <- function(a) {"
"0","    if (class(a)==""Polygons"") {"
"0","      lapply(a@Polygons, unnest_polygons)"
"0","    } else if (class(a)==""Polygon"") {"
"0","      UNNESTED <<- c(UNNESTED, a)"
"0","    }"
"0","  }"
"0","  "
"0","  lapply(z@polygons, unnest_polygons)"
"0","  z <- Polygons(UNNESTED, ID=pid)"
"0","  z <- list(z)"
"0","  "
"0","  mapdata[pid,] = statedata[statedata$STATEFIP==fip,]"
"0","  spoly <- c(spoly, z)"
"0","  ids <- c(ids, pid)"
"0","  "
"0","}"
